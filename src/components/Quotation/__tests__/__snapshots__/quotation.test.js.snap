exports[`Quotation Component should render the component 1`] = `
ShallowWrapper {
  Symbol(enzyme.__root__): [Circular],
  Symbol(enzyme.__unrendered__): <Quotation
    currency="USD"
    symbol="$"
    value="12.99" />,
  Symbol(enzyme.__renderer__): Object {
    "batchedUpdates": [Function],
    "checkPropTypes": [Function],
    "getNode": [Function],
    "render": [Function],
    "simulateError": [Function],
    "simulateEvent": [Function],
    "unmount": [Function],
  },
  Symbol(enzyme.__node__): Object {
    "instance": null,
    "key": undefined,
    "nodeType": "host",
    "props": Object {
      "children": Array [
        " ",
        "$",
        " ",
        "12.99",
        " ",
        "USD",
      ],
      "className": "quotation-text",
    },
    "ref": null,
    "rendered": Array [
      " ",
      "$",
      " ",
      "12.99",
      " ",
      "USD",
    ],
    "type": "small",
  },
  Symbol(enzyme.__nodes__): Array [
    Object {
      "instance": null,
      "key": undefined,
      "nodeType": "host",
      "props": Object {
        "children": Array [
          " ",
          "$",
          " ",
          "12.99",
          " ",
          "USD",
        ],
        "className": "quotation-text",
      },
      "ref": null,
      "rendered": Array [
        " ",
        "$",
        " ",
        "12.99",
        " ",
        "USD",
      ],
      "type": "small",
    },
  ],
  Symbol(enzyme.__options__): Object {
    "adapter": ReactSixteenAdapter {
      "options": Object {
        "enableComponentDidUpdateOnSetState": true,
        "legacyContextMode": "parent",
        "lifecycles": Object {
          "componentDidUpdate": Object {
            "onSetState": true,
          },
          "getChildContext": Object {
            "calledByRenderer": false,
          },
          "getDerivedStateFromProps": true,
          "getSnapshotBeforeUpdate": true,
          "setState": Object {
            "skipsComponentDidUpdateOnNullish": true,
          },
        },
      },
    },
  },
}
`;
